pkgname=emby-server-beta
pkgver=4.7.0.18
pkgrel=1
_ffmpeg_ver=2021_02_27
_ffdetect_ver=2020_05_23
pkgdesc='Bring together your videos, music, photos, and live television'
arch=(x86_64 armv7h)
url=https://emby.media
license=(custom)
provides=('emby-server')
conflicts=('emby-server')

if [ ${CARCH} == 'x86_64' ]; then
  depends_add=('libmfx' 'skia-sharp' 'dotnet-runtime' 'dotnet-host' 'aspnet-runtime')
elif [ ${CARCH} == 'armv7h' ]; then
  depends_add=('dotnet-runtime-bin' 'dotnet-host-bin' 'aspnet-runtime-bin')
fi

depends=(
  'alsa-lib'
  'aom'
  'bzip2'
  'expat'
  'fontconfig'
  'fribidi'
  'glibc'
  'gmp'
  'gnutls'
  'lame'
  'libass.so'
  'libdav1d.so'
  'libdrm'
  'libfreetype.so'
  'libjpeg-turbo'
  'libpng'
  'libtheora'
  'libva'
  'libvorbisenc.so'
  'libvorbis.so'
  'libwebp'
  'libx264.so'
  'opus'
  'sqlite'
  'zlib'
  'zvbi'
  $depends_add
)
makedepends=(
  'ffnvcodec-headers8.1'
  'nasm'
)
if [ ${CARCH} == 'x86_64' ]; then
   optdepends=('intel-media-sdk: Intel QuickSync support (requires Emby Premiere)'
               'nvidia-utils: Nvidia NVDEC/NVENC support (requires Emby Premiere)')
   ffdetect="https://mediabrowser.github.io/embytools/ffdetect-${_ffmpeg_ver}-x64.tar.xz"
   sha256sum_ffdetect='3e87c29f28a714e96ee62b2e1bac79215aa1b0fe6065f37ccebb33c84e05c64d'
elif [ ${CARCH} == 'armv7h' ]; then
   optdepends=()
   ffdetect=""
   sha256sum_ffdetect=""
fi

source=(
  https://github.com/MediaBrowser/Emby.Releases/releases/download/${pkgver}/embyserver-netcore_${pkgver}.zip
  https://mediabrowser.github.io/embytools/ffmpeg-${_ffmpeg_ver}.tar.gz
  ${ffdetect}
  emby-server
  emby-server.conf
  emby-server.service
  license.docx
  Permission_to_distribute.mbox
)
noextract=(license.docx)
backup=(etc/conf.d/emby-server)
install=emby-server.install
sha256sums=('96513e8659250cebbdd4dad0f1e83d5d7a9e75538b5b5f9ae711904799beb154'
            'dd587ddbde4c967695919d7f85b0f28e6d7262f55171f3e8052eef2f4a7f585c'
            $sha256sum_ffdetect
            '0351d6e9118853e3aa275d62b67dce4444b3d85130b05fb889b2069f364f47ca'
            '5e3470f834808babe7d60b8d86f462e7945c3617499539e5af45eb55d7b87b23'
            'a7f2e38d2d196984d1c1632c851215aea9072b3af998d10a6b68477ad886ea14'
            'a6d7ea65dcb06392479a85e1a10a7aeb872d803da6f784f6935fcd4ee63008c6'
            '716cc88f47b829937884e765add9fe54ed27f0f4d1cec1a18045feb138fb66c9')

prepare() {
  rm -rf system/{electron,runtimes/{osx,tizen*,win*}}
}

build() {
  cd ffmpeg-${_ffmpeg_ver}_public

  export PKG_CONFIG_PATH=/usr/lib/ffnvcodec8.1/pkgconfig

  if [ ${CARCH} == 'x86_64' ]; then
     configure_add=" --enable-libmfx
                     --enable-nvdec
                     --enable-nvenc"
  elif [ ${CARCH} == 'armv7h' ]; then
     configure_add=""
  fi

  ./configure \
    --disable-doc \
    --disable-ffplay \
    --disable-shared \
    --disable-vdpau \
    --disable-libxcb \
    --disable-lzma \
    --disable-sdl2 \
    --disable-xlib \
    --enable-fontconfig \
    --enable-gmp \
    --enable-gnutls \
    --enable-gpl \
    --enable-libaom \
    --enable-libass \
    --enable-libdav1d \
    --enable-libdrm \
    --enable-libfreetype \
    --enable-libfribidi \
    --enable-libmp3lame \
    --enable-libopus \
    --enable-libtheora \
    --enable-libvorbis \
    --enable-libwebp \
    --enable-libx264 \
    --enable-libzvbi \
    --enable-version3 \
    --enable-static \
    --enable-vaapi \
    $configure_add
  make
}

package() {
  install -dm 755 "${pkgdir}"/usr/lib
  cp -dr --no-preserve='ownership' system "${pkgdir}"/usr/lib/emby-server
  ln -s ../libSkiaSharp.so.80.2.0 "${pkgdir}"/usr/lib/emby-server/libSkiaSharp.so
  install -Dm 755 emby-server -t "${pkgdir}"/usr/bin/
  if [ ${CARCH} == 'x86_64' ]; then
     install -Dm 755 bin/ffdetect "${pkgdir}"/usr/bin/ffdetect-emby
  fi
  install -Dm 755 ffmpeg-${_ffmpeg_ver}_public/ffmpeg "${pkgdir}"/usr/bin/ffmpeg-emby
  install -Dm 755 ffmpeg-${_ffmpeg_ver}_public/ffprobe "${pkgdir}"/usr/bin/ffprobe-emby
  install -Dm 644 emby-server.service -t "${pkgdir}"/usr/lib/systemd/system/
  install -Dm 644 emby-server.conf "${pkgdir}"/etc/conf.d/emby-server

  if [ ${CARCH} == 'armv7h' ]; then
     sed '/FFDETECT/d' -i "${pkgdir}"/etc/conf.d/emby-server "${pkgdir}"/usr/bin/emby-server
  fi

  install -Dm 644 license.docx -t "${pkgdir}"/usr/share/licenses/emby-server/
}

# vim: ts=2 sw=2 et:
