pkgname=emby-server-beta
pkgver=4.7.0.12
pkgrel=1
_ffmpeg_ver=2020_05_23
_ffdetect_ver=2020_05_23
pkgdesc='Bring together your videos, music, photos, and live television'
arch=('x86_64' 'armv7h')
url='https://emby.media'
license=('custom')
if [ ${CARCH} == 'x86_64' ]; then
  depends_add=('libmfx' 'skia-sharp' 'dotnet-runtime-3.1' 'dotnet-host')
else
  depends_add=('dotnet-runtime-3.1-bin' 'dotnet-host-bin')
fi
depends=('alsa-lib'
         'aom'
         'bzip2'
         'expat'
         'fontconfig'
         'fribidi'
         'glibc'
         'gmp'
         'gnutls'
         'lame'
         'libass'
         'dav1d'
         'libdrm'
         'freetype2'
         'libjpeg-turbo'
         'libpng'
         'libtheora'
         'libva'
         'libvorbis'
         'libwebp'
         'x264'
         'opus'
         'sqlite'
         'zlib'
         'zvbi'
         $depends_add)
makedepends=('ffnvcodec-headers8.1'
             'nasm')
if [ ${CARCH} == 'x86_64' ]; then
   optdepends=('intel-media-sdk: Intel QuickSync support (requires Emby Premiere)'
               'nvidia-utils: Nvidia NVDEC/NVENC support (requires Emby Premiere)')
else
   optdepends=()
fi
provides=('emby-server')
conflicts=('emby-server')
source=("https://github.com/MediaBrowser/Emby.Releases/releases/download/${pkgver}/embyserver-netcore_${pkgver}.zip"
        "https://mediabrowser.github.io/embytools/ffmpeg-${_ffmpeg_ver}.tar.gz"
        "https://mediabrowser.github.io/embytools/ffdetect-${_ffdetect_ver}-x64.tar.xz"
        'emby-server'
        'emby-server.conf'
        'emby-server.service'
        'license.docx')
noextract=(license.docx)
backup=('etc/conf.d/emby-server')
install=emby-server.install
sha256sums=('30b84478f5512bb480f03473ac14aa3143715bdc79b1f0311c47af2fa60f635e'
            'ed2fde500b705b06a0b82a9bf6b367c63b0fc899f69f77691bc68d61f3862a77'
            'c66e73c86ebfdfb169dbdc3c6731f09bd82382dda3fb8a77abe19d6973c09b51'
            '0351d6e9118853e3aa275d62b67dce4444b3d85130b05fb889b2069f364f47ca'
            '5e3470f834808babe7d60b8d86f462e7945c3617499539e5af45eb55d7b87b23'
            'a7f2e38d2d196984d1c1632c851215aea9072b3af998d10a6b68477ad886ea14'
            'a6d7ea65dcb06392479a85e1a10a7aeb872d803da6f784f6935fcd4ee63008c6')

prepare() {
  rm -rf system/{electron,runtimes/{osx,tizen*,win*}}
}

build() {
  cd ffmpeg-${_ffmpeg_ver}_*
  export PKG_CONFIG_PATH=/usr/lib/ffnvcodec8.1/pkgconfig

  if [ ${CARCH} == 'x86_64' ]; then
     configure_add=" --enable-libmfx
                     --enable-nvdec
                     --enable-nvenc"
  else
     configure_add=""
  fi

  ./configure \
    --disable-doc \
    --disable-ffplay \
    --disable-shared \
    --disable-vdpau \
    --disable-libxcb \
    --disable-lzma \
    --disable-sdl2 \
    --disable-xlib \
    --enable-fontconfig \
    --enable-gmp \
    --enable-gnutls \
    --enable-gpl \
    --enable-libaom \
    --enable-libass \
    --enable-libdav1d \
    --enable-libdrm \
    --enable-libfreetype \
    --enable-libfribidi \
    --enable-libmp3lame \
    --enable-libopus \
    --enable-libtheora \
    --enable-libvorbis \
    --enable-libwebp \
    --enable-libx264 \
    --enable-libzvbi \
    --enable-version3 \
    --enable-static \
    --enable-vaapi \
    $configure_add
  make
}

package() {
  install -dm 755 "${pkgdir}"/usr/lib
  cp -dr --no-preserve='ownership' system "${pkgdir}"/usr/lib/emby-server
  ln -s ../libSkiaSharp.so.68.0.0 "${pkgdir}"/usr/lib/emby-server/libSkiaSharp.so
  install -Dm 755 emby-server -t "${pkgdir}"/usr/bin/
  install -Dm 755 bin/ffdetect "${pkgdir}"/usr/bin/ffdetect-emby
  install -Dm 755 ffmpeg-${_ffmpeg_ver}_*/ffmpeg "${pkgdir}"/usr/bin/ffmpeg-emby
  install -Dm 755 ffmpeg-${_ffmpeg_ver}_*/ffprobe "${pkgdir}"/usr/bin/ffprobe-emby
  install -Dm 644 emby-server.service -t "${pkgdir}"/usr/lib/systemd/system/
  install -Dm 644 emby-server.conf "${pkgdir}"/etc/conf.d/emby-server
  install -Dm 644 license.docx -t "${pkgdir}"/usr/share/licenses/$pkgname/license.docx
}
